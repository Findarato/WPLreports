{
  "name": "is-cwebp-readable",
  "version": "1.0.2",
  "description": "Check if a Buffer/Uint8Array is available for cwebp image source",
  "repository": {
    "type": "git",
    "url": "shinnn/is-cwebp-readable"
  },
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "scripts": {
    "bench": "node --harmony_arrow_functions node_modules/.bin/_matcha benchmark/runner.js",
    "pretest": "eslint --config node_modules/@shinnn/eslintrc-node/rc.json index.js benchmark test.js",
    "test": "node --harmony_arrow_functions test.js | tap-spec",
    "coverage": "node --harmony_arrow_functions node_modules/.bin/istanbul cover test.js",
    "coveralls": "${npm_package_scripts_coverage} && istanbul-coveralls"
  },
  "license": "Unlicense",
  "files": [
    "index.js"
  ],
  "keywords": [
    "buffer",
    "uint8array",
    "type",
    "file",
    "detect",
    "image",
    "jpg",
    "jpeg",
    "png",
    "tif",
    "tiff",
    "webp",
    "cwebp"
  ],
  "dependencies": {
    "file-type": "^2.6.0"
  },
  "devDependencies": {
    "@shinnn/eslintrc-node": "^1.0.2",
    "eslint": "^0.21.2",
    "istanbul": "^0.3.14",
    "istanbul-coveralls": "^1.0.2",
    "matcha": "^0.6.0",
    "tap-spec": "^3.0.0",
    "tape": "^4.0.0"
  },
  "readme": "# is-cwebp-readable\n\n[![NPM version](https://img.shields.io/npm/v/is-cwebp-readable.svg)](https://www.npmjs.com/package/is-cwebp-readable)\n[![Build Status](https://travis-ci.org/shinnn/is-cwebp-readable.svg?branch=master)](https://travis-ci.org/shinnn/is-cwebp-readable)\n[![Build status](https://ci.appveyor.com/api/projects/status/lrfe3hgtupsg45l1?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/is-cwebp-readable)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/is-cwebp-readable.svg)](https://coveralls.io/r/shinnn/is-cwebp-readable)\n[![Dependency Status](https://img.shields.io/david/shinnn/is-cwebp-readable.svg?style=flat&label=deps)](https://david-dm.org/shinnn/is-cwebp-readable)\n[![devDependency Status](https://img.shields.io/david/dev/shinnn/is-cwebp-readable.svg?style=flat&label=devDeps)](https://david-dm.org/shinnn/is-cwebp-readable#info=devDependencies)\n\nCheck if a Buffer/Uint8Array is available for [cwebp](https://developers.google.com/speed/webp/docs/cwebp) image source\n\n```javascript\nconst fs = require('fs');\nconst isCwebpReadable = require('is-cwebp-readable');\n\nisCwebpReadable(fs.readFileSync('fixture.png')); //=> true\nisCwebpReadable(fs.readFileSync('fixture.bmp')); //=> false\n```\n\n## Installation\n\n[Use npm.](https://docs.npmjs.com/cli/install)\n\n```sh\nnpm install is-cwebp-readable\n```\n\n## API\n\n```javascript\nconst isCwebpReadable = require('is-cwebp-readable');\n```\n\n### isCwebpReadable(*buf*)\n\n*buf*: [`Buffer`](https://iojs.org/api/buffer.html#buffer_class_buffer) or [`Uint8Array`](https://www.khronos.org/registry/typedarray/specs/latest/#TYPEDARRAYS)  \nReturn: `Boolean`\n\nIt returns `true` if the data is [PNG](https://wikipedia.org/wiki/Portable_Network_Graphics), [JPEG](https://wikipedia.org/wiki/JPEG), [TIFF](https://wikipedia.org/wiki/Tagged_Image_File_Format), or [WebP](https://wikipedia.org/wiki/WebP), otherwise `false`.\n\n## License\n\n[The Unlicense](./LICENSE)\n",
  "readmeFilename": "README.md",
  "_id": "is-cwebp-readable@1.0.2",
  "dist": {
    "shasum": "97b94a6f559e729086449735d836a17091106656"
  },
  "_from": "is-cwebp-readable@^1.0.0",
  "_resolved": "https://registry.npmjs.org/is-cwebp-readable/-/is-cwebp-readable-1.0.2.tgz"
}
